[{"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\components\\app.jsx":"1","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\base\\layout.jsx":"2","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\base\\header.jsx":"3","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\base\\sider.jsx":"4","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\base\\cont.jsx":"5","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\base\\demo.jsx":"6","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\home\\home.jsx":"7","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\home\\port.jsx":"8","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\home\\network.jsx":"9","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\view.jsx":"10","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\log.jsx":"11","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\layout.jsx":"12","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\broker\\info1.jsx":"13","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\broker\\tabls.jsx":"14","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\subscript\\subscript.jsx":"15","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\publish\\tabls.jsx":"16","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\subscript\\tabls.jsx":"17","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\mqtt.jsx":"18","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\broker\\info2.jsx":"19","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\info.jsx":"20","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\draft\\draft.jsx":"21","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\ao\\ao.jsx":"22","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\cpu\\cpu.jsx":"23","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\ao\\aoTab.jsx":"24","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\cpu\\doTab.jsx":"25","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\draft\\ai.jsx":"26","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\draft\\ao.jsx":"27","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\draft\\cpu.jsx":"28","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\ai\\aiTab.jsx":"29","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\cpu\\aiTab.jsx":"30","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\cpu\\cpuTab.jsx":"31","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\hardwareCon.jsx":"32","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\Fireware\\rts\\rts.jsx":"33","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\Fireware\\ios\\ios3.jsx":"34","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\Fireware\\ios\\ios5.jsx":"35","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\Fireware\\upgrade.jsx":"36","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\device-real.jsx":"37","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modtcp\\table.jsx":"38","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modtcp\\modtcp.jsx":"39","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\login.jsx":"40","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\Fireware\\ios\\ios.jsx":"41","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\Fireware\\ios\\ios4.jsx":"42","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\draft\\display.jsx":"43","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\ai\\ai.jsx":"44","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\Fireware\\rts\\rtsInfo.jsx":"45","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\publish\\publish.jsx":"46","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modrtu\\port01.jsx":"47","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modrtu\\port03.jsx":"48","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modrtu\\port05.jsx":"49","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modrtu\\tables.jsx":"50","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modrtu\\modrtu.jsx":"51","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\broker\\broker.jsx":"52","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\index.js":"53","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modAdress\\modbusAdre.jsx":"54","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\communication\\comm.jsx":"55","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\ProjectVari\\project.jsx":"56","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modrtu\\tabs.jsx":"57"},{"size":540,"mtime":1607049096691,"results":"58","hashOfConfig":"59"},{"size":1794,"mtime":1607074046147,"results":"60","hashOfConfig":"59"},{"size":2261,"mtime":1607074674837,"results":"61","hashOfConfig":"59"},{"size":3670,"mtime":1607075312221,"results":"62","hashOfConfig":"59"},{"size":419,"mtime":1606900088680,"results":"63","hashOfConfig":"59"},{"size":1759,"mtime":1606879478629,"results":"64","hashOfConfig":"59"},{"size":722,"mtime":1606899120775,"results":"65","hashOfConfig":"59"},{"size":6780,"mtime":1606899886839,"results":"66","hashOfConfig":"59"},{"size":4730,"mtime":1606899628296,"results":"67","hashOfConfig":"59"},{"size":2947,"mtime":1607065956594,"results":"68","hashOfConfig":"59"},{"size":2911,"mtime":1606960610538,"results":"69","hashOfConfig":"59"},{"size":573,"mtime":1607063061939,"results":"70","hashOfConfig":"59"},{"size":922,"mtime":1606902894791,"results":"71","hashOfConfig":"59"},{"size":6335,"mtime":1606903027504,"results":"72","hashOfConfig":"59"},{"size":1340,"mtime":1606902495988,"results":"73","hashOfConfig":"59"},{"size":4671,"mtime":1606903762704,"results":"74","hashOfConfig":"59"},{"size":5576,"mtime":1606903489901,"results":"75","hashOfConfig":"59"},{"size":260,"mtime":1606902868679,"results":"76","hashOfConfig":"59"},{"size":924,"mtime":1606902907714,"results":"77","hashOfConfig":"59"},{"size":1004,"mtime":1606957922786,"results":"78","hashOfConfig":"59"},{"size":1191,"mtime":1606957922646,"results":"79","hashOfConfig":"59"},{"size":1296,"mtime":1606957922692,"results":"80","hashOfConfig":"59"},{"size":2675,"mtime":1606959884909,"results":"81","hashOfConfig":"59"},{"size":5892,"mtime":1606959100885,"results":"82","hashOfConfig":"59"},{"size":5580,"mtime":1606959152854,"results":"83","hashOfConfig":"59"},{"size":609,"mtime":1606958187374,"results":"84","hashOfConfig":"59"},{"size":609,"mtime":1606958220222,"results":"85","hashOfConfig":"59"},{"size":743,"mtime":1606958704660,"results":"86","hashOfConfig":"59"},{"size":5761,"mtime":1606959048636,"results":"87","hashOfConfig":"59"},{"size":5955,"mtime":1606959194905,"results":"88","hashOfConfig":"59"},{"size":6343,"mtime":1606959126540,"results":"89","hashOfConfig":"59"},{"size":11427,"mtime":1606964135867,"results":"90","hashOfConfig":"59"},{"size":895,"mtime":1606960689123,"results":"91","hashOfConfig":"59"},{"size":1822,"mtime":1606960689101,"results":"92","hashOfConfig":"59"},{"size":1813,"mtime":1606960689112,"results":"93","hashOfConfig":"59"},{"size":425,"mtime":1606961023469,"results":"94","hashOfConfig":"59"},{"size":7372,"mtime":1606961375233,"results":"95","hashOfConfig":"59"},{"size":6066,"mtime":1606961479434,"results":"96","hashOfConfig":"59"},{"size":469,"mtime":1606961804130,"results":"97","hashOfConfig":"59"},{"size":1896,"mtime":1607049023452,"results":"98","hashOfConfig":"59"},{"size":987,"mtime":1606960689082,"results":"99","hashOfConfig":"59"},{"size":1813,"mtime":1606960689109,"results":"100","hashOfConfig":"59"},{"size":1220,"mtime":1606957922637,"results":"101","hashOfConfig":"59"},{"size":1263,"mtime":1606957922667,"results":"102","hashOfConfig":"59"},{"size":1814,"mtime":1606960689127,"results":"103","hashOfConfig":"59"},{"size":1220,"mtime":1606902491145,"results":"104","hashOfConfig":"59"},{"size":2900,"mtime":1607062120753,"results":"105","hashOfConfig":"59"},{"size":1725,"mtime":1607062120764,"results":"106","hashOfConfig":"59"},{"size":2480,"mtime":1607062120788,"results":"107","hashOfConfig":"59"},{"size":5488,"mtime":1607062416762,"results":"108","hashOfConfig":"59"},{"size":321,"mtime":1607062483259,"results":"109","hashOfConfig":"59"},{"size":547,"mtime":1607063384017,"results":"110","hashOfConfig":"59"},{"size":237,"mtime":1606810904024,"results":"111","hashOfConfig":"59"},{"size":244,"mtime":1607064789235,"results":"112","hashOfConfig":"59"},{"size":246,"mtime":1607064754129,"results":"113","hashOfConfig":"59"},{"size":247,"mtime":1607064801555,"results":"114","hashOfConfig":"59"},{"size":955,"mtime":1607062120810,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"duu6y9",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"147"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"147"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"118"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"136"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"136"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"118"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"136"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"147"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"118"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"136"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"118"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"136"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"118"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"136"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\components\\app.jsx",[],["250","251"],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\base\\layout.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\base\\header.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\base\\sider.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\base\\cont.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\base\\demo.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\home\\home.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\home\\port.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\home\\network.jsx",["252"],"import React,{ Component ,useState}  from 'react';\r\nimport { Table, Popconfirm, Form ,Button } from 'antd';\r\nimport { Select } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n//原始数据而已\r\n  const originData = [];\r\n  originData.push({\r\n      key:'01',\r\n      ID:'1',\r\n      IP:'255.255.255.255',\r\n      Gateway:'2',\r\n      Mask:'1',\r\n  },{\r\n    key:'02',\r\n    ID:'2',\r\n    IP:'255.255.255.255',\r\n    Gateway:'2',\r\n    Mask:'1',\r\n},\r\n)\r\n\r\n\r\n\r\n//单元格的格式以及规则的限定\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n \r\n  const inputNode =  <Select style={{ width: 80 }}>\r\n                                                <Option value=\"19200\"> 19200</Option>\r\n                                                <Option value=\"115200\"> 115200</Option>\r\n                     </Select>\r\n                   \r\n\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst EditableTable = () => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState('');\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n        ID:'',\r\n        IP:'',\r\n        Gateway:'',\r\n        Mask:'',\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n\r\n  //画table\r\n  const columns = [\r\n    {\r\n        title: '网口',\r\n        dataIndex: 'ID',\r\n        width: '20%',\r\n        editable: false,\r\n      },\r\n    {\r\n      title: 'IP',\r\n      dataIndex: 'IP',\r\n      width: '20%',\r\n      editable: false,\r\n    },\r\n    {\r\n      title: 'Gateway',\r\n      dataIndex: 'Gateway',\r\n      width: '20%',\r\n      editable: false,\r\n    },\r\n    {\r\n        title: 'Mask',\r\n        dataIndex: 'Mask',\r\n        width: '20%',\r\n        editable: true,\r\n      },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <Button\r\n              type=\"link\"\r\n              onClick={() => save(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              保存\r\n            </Button>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <Button type=\"text\">取消</Button>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n          <Button type=\"link\" disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n           编辑\r\n         </Button>\r\n       </div>\r\n      \r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  //循环遍历colums\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n  console.log('inputType: col.dataIndex,',col.dataIndex)\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        // inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n        inputType: col.dataIndex,\r\n\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={false}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default class NetworkCon extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <EditableTable />\r\n        )\r\n    }\r\n\r\n    \r\n}",["253","254"],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\view.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\log.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\layout.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\broker\\info1.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\broker\\tabls.jsx",[],["255","256"],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\subscript\\subscript.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\publish\\tabls.jsx",["257"],"import React,{ useState}  from 'react';\r\nimport { Table,InputNumber, Popconfirm, Form,Input ,Button} from 'antd';\r\nimport { Select } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n//单元格的格式以及规则的限定\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n \r\n  const inputNode =(inputType === 'topic' ?<Input /> :(\r\n                    inputType === 'zone' ? <InputNumber /> :(\r\n                    inputType === 'addr'?<InputNumber /> :(\r\n                    inputType === 'size'?<InputNumber /> :null)))\r\n                        )\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\n\r\n//\r\nconst PublishTable = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(props.originData);\r\n  const [editingKey, setEditingKey] = useState('');\r\n  \r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      topic:'',\r\n      zone:'',\r\n      addr:'',\r\n      size:'',\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n\r\n  //画table\r\n  const columns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex: 'index',\r\n      width: '10%',\r\n      editable: false,\r\n    },\r\n      {\r\n        title: 'topic',\r\n        dataIndex: 'topic',\r\n        width: '15%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '区域',\r\n        dataIndex: 'zone',\r\n        width: '15%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: 'modbus address',\r\n        dataIndex: 'addr',\r\n        width: '20%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: 'size',\r\n        dataIndex: 'size',\r\n        width: '15%',\r\n        editable: true,\r\n      },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <Button type=\"link\"\r\n              onClick={() => save(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              保存\r\n            </Button>\r\n            <Popconfirm title=\"取消编辑？\" onConfirm={cancel}>\r\n              <Button type=\"text\">取消</Button>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n          <Button type=\"link\" disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n          编辑\r\n        </Button>\r\n        <Button type=\"link\" disabled={editingKey !== ''} style={{marginLeft:'15px',marginRight:'15px'}} >\r\n          添加\r\n        </Button>\r\n        <Button type=\"link\" disabled={editingKey !== ''} danger >\r\n          删除\r\n        </Button>\r\n     </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  //循环遍历colums\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n  console.log('inputType: col.dataIndex,',col.dataIndex)\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        // inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n        inputType: col.dataIndex,\r\n\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={false}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default PublishTable;\r\n\r\n","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\subscript\\tabls.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\mqtt.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\broker\\info2.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\info.jsx",["258"],"import React,{ Component }  from 'react';\r\n\r\n\r\n// import AiTab from './ai/aiTab'\r\n// import AoTab from './ao/aoTab'\r\n// import CpuTab from './cpu/cpuTab'\r\nimport Ai from './ai/ai'\r\nimport Ao from './ao/ao'\r\nimport Cpu from './cpu/cpu'\r\n\r\nexport default class Info extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n\r\n    render(){\r\n        const show = [...this.props.show];\r\n\r\n        const Cpushow = show[0].CpuShow;\r\n        const Aishow = show[0].AiShow;\r\n        const Aoshow =show[0].AoShow;\r\n\r\n\r\n\r\n        return(\r\n            <div>\r\n                <div  style={{display:Cpushow}}>\r\n                    <Cpu info={this.props.info}/>\r\n\r\n                </div>\r\n                <div  style={{display:Aishow}}>\r\n                    <Ai info={this.props.info}/>\r\n                </div>\r\n                <div  style={{display:Aoshow}}>\r\n                    <Ao info={this.props.info}/>\r\n\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    \r\n}\r\n","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\draft\\draft.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\ao\\ao.jsx",["259","260"],"import React,{ Component }  from 'react';\r\nimport { Select,Button  } from 'antd';\r\nimport AoTab from './aoTab'\r\n\r\nconst { Option } = Select;\r\nexport default class Ao extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        console.log('现在的ao里面是什么呢？',props.info)\r\n    }\r\n\r\n    render(){\r\n        const info = this.props.info\r\n        console.log('我是aoaoaoaoaooaoaoao',info)\r\n        return(\r\n            <div style={{margin:'10px'}}>\r\n                <div style={{fontSize:'22px',marginBottom:'20px'}}>\r\n                    AO配置信息\r\n                </div>\r\n                {/* <div style={{fontSize:'16px',margin:'10px',float:'right'}}>\r\n                滤波时间:\r\n                    <Select defaultValue=\"33\" style={{ width: 100,marginLeft:'10px' }} >\r\n                        <Option value=\"33\">33ms</Option>\r\n                        <Option value=\"23\">23ms</Option>\r\n                        <Option value=\"13\">13ms</Option>\r\n                        <Option value=\"43\">43ms</Option>\r\n                    </Select>\r\n                    <Button style={{ marginLeft:'10px' }}>保存</Button>\r\n\r\n                </div>\r\n                */}\r\n                \r\n               <AoTab info={info}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\cpu\\cpu.jsx",["261","262"],"import React,{ Component }  from 'react';\r\nimport CpuTab from './cpuTab'\r\nimport { Select,Button  } from 'antd';\r\n\r\n\r\nimport AiTable from './aiTab'\r\nimport DoTable from './doTab'\r\n\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nexport default class Cpu extends Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        const info = this.props.info\r\n        console.log('我现在的ingo是多少？？？？？？',info)\r\n        const diInfo = info.slice(0,12)\r\n        const doInfo = info.slice(12,16)\r\n        const aiInfo = info.slice(16,22)\r\n        console.log(\"我们三个是多少呢\",diInfo,doInfo,aiInfo)\r\n\r\n\r\n\r\n        return(\r\n            <div style={{margin:'10px',paddingBottom:'10px'}}>\r\n                <div style={{fontSize:'22px'}}>\r\n                    CPU配置信息\r\n                </div>\r\n                <div style={{fontSize:'16px',margin:'10px',float:'right'}}>\r\n                    <span>\r\n                        DI滤波次数:\r\n                        <Select defaultValue=\"8\" style={{ width: 100,marginLeft:'10px',marginRight:'10px' }} >\r\n                            <Option value=\"8\">8</Option>\r\n                            <Option value=\"16\">16</Option>\r\n                            <Option value=\"32\">32</Option>\r\n                        </Select>\r\n                    </span>\r\n                    {/* <span>\r\n                        AI滤波时间:\r\n                        <Select defaultValue=\"33\" style={{ width: 100,marginLeft:'10px' }} >\r\n                            <Option value=\"33\">33ms</Option>\r\n                            <Option value=\"23\">23ms</Option>\r\n                            <Option value=\"13\">13ms</Option>\r\n                            <Option value=\"43\">43ms</Option>\r\n                        </Select>\r\n                        <Button style={{ marginLeft:'10px' }}>保存</Button>\r\n                    </span> */}\r\n                </div>\r\n                <div>\r\n                    <div style={{fontSize:'20px'}}>\r\n                        DI\r\n                    </div>\r\n                    <CpuTab info={diInfo}/>\r\n                </div>\r\n                <div style={{marginTop:'20px'}}>\r\n                    <div style={{fontSize:'20px'}}>\r\n                        DO\r\n                    </div>\r\n                    <DoTable info={doInfo} style={{marginTop:'200px'}}/>\r\n                </div>\r\n                <div style={{marginTop:'20px'}}>\r\n                    <div style={{fontSize:'20px'}}>\r\n                       AI\r\n                    </div>\r\n                    <AiTable info={aiInfo}/>\r\n                </div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\ao\\aoTab.jsx",["263"],"import React,{ useState,useEffect}  from 'react';\r\nimport { Table,InputNumber, Popconfirm, Form,Button } from 'antd';\r\nimport { Select } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n//单元格的格式以及规则的限定\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n \r\n  const inputNode =inputType === 'funcCode' ? <Select style={{ width: 180 }}>\r\n                                                  <Option value=\"Read Coils\"> Read Coils</Option>\r\n                                                  <Option value=\"Read Discreate Inputs\"> Read Discreate Inputs</Option>\r\n                                                  <Option value=\"Read Holding Registers\"> Read Holding Registers</Option>\r\n                                                  <Option value=\"Read Input Registers\"> Read Input Registers</Option>\r\n                                                  <Option value=\"Write Coil\"> Write Coil</Option>\r\n                                                  <Option value=\"Write Register\"> Write Register</Option>\r\n                                                  <Option value=\"Write Coils\"> Write Coils</Option>\r\n                                                  <Option value=\"Write Registers\"> Write Registers</Option>\r\n                                              </Select> \r\n                                              :<InputNumber />;\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\n\r\n//\r\nconst AoTable = (props) => {\r\n  const [form] = Form.useForm();\r\n  const info = props.info\r\n  const [data, setData] = useState(props.info);\r\n  const [editingKey, setEditingKey] = useState('');\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  console.log('此时的editingKey是多少呢？',editingKey)\r\n\r\n  useEffect(() =>{\r\n    setData(info)\r\n})\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n        index:'',\r\n        time:'',\r\n        SOE:'',\r\n        SOERange:'',\r\n        SOEUpper:'',\r\n        SOELower:'',\r\n        fault:'',\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n\r\n  //画table\r\n  const columns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex: 'index',\r\n      width: '10%',\r\n      editable: false,\r\n    },\r\n    {\r\n      title: '滤波时间',\r\n      dataIndex:'time',\r\n      width: '10%',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'SOE事件',\r\n      dataIndex: 'SOE',\r\n      width: '10%',\r\n      editable: true,\r\n    },\r\n    \r\n      {\r\n        title: 'SOE滞回区间',\r\n        dataIndex: 'SOERange',\r\n        width: '15%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: 'SOE上限',\r\n        dataIndex: 'SOEUpper',\r\n        width: '10%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: 'SOE下限',\r\n        dataIndex: 'SOELower',\r\n        width: '10%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '故障预置',\r\n        dataIndex: 'fault',\r\n        width: '10%',\r\n        editable: true,\r\n      },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n          <Button\r\n            type='link'\r\n            onClick={() => save(record.key)}\r\n            style={{\r\n              marginRight: 8,\r\n            }}\r\n          >\r\n            保存\r\n          </Button>\r\n          <Popconfirm title=\"取消编辑？\" onConfirm={cancel}>\r\n            <Button type='text'>取消</Button>\r\n          </Popconfirm>\r\n        </span>\r\n      ) : (\r\n        <div>\r\n           <Button  type='link' disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n            编辑\r\n          </Button>\r\n          <Button type='link' disabled={editingKey !== ''}  >\r\n            添加\r\n          </Button>\r\n          <Button type='text' disabled={editingKey !== ''}   danger>\r\n            删除\r\n          </Button>\r\n        </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  //循环遍历colums\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n  console.log('inputType: col.dataIndex,',col.dataIndex)\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        // inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n        inputType: col.dataIndex,\r\n\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={false}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default AoTable;\r\n\r\n\r\n\r\n","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\cpu\\doTab.jsx",["264"],"import React,{ useState ,useEffect }  from 'react';\r\nimport { Table,InputNumber, Popconfirm, Form ,Button} from 'antd';\r\nimport { Select } from 'antd';\r\n// import Info from '../info';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n//单元格的格式以及规则的限定\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n \r\n  const inputNode =inputType === 'funcCode' ? <Select style={{ width: 180 }}>\r\n                                                  <Option value=\"Read Coils\"> Read Coils</Option>\r\n                                                  <Option value=\"Read Discreate Inputs\"> Read Discreate Inputs</Option>\r\n                                                  <Option value=\"Read Holding Registers\"> Read Holding Registers</Option>\r\n                                                  <Option value=\"Read Input Registers\"> Read Input Registers</Option>\r\n                                                  <Option value=\"Write Coil\"> Write Coil</Option>\r\n                                                  <Option value=\"Write Register\"> Write Register</Option>\r\n                                                  <Option value=\"Write Coils\"> Write Coils</Option>\r\n                                                  <Option value=\"Write Registers\"> Write Registers</Option>\r\n                                              </Select> \r\n                                              :<InputNumber />;\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\n\r\n//\r\nconst DoTable = (props) => {\r\n  const [form] = Form.useForm();\r\n  const info = props.info;\r\n  const [data, setData] = useState(props.info);\r\n  const [editingKey, setEditingKey] = useState('');\r\n\r\n  useEffect(() =>{\r\n      setData(info)\r\n  })\r\n  \r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n        index:'',\r\n        type:'',\r\n        time:'',\r\n        SOE:'',\r\n        // SOERange:'',\r\n        // SOEUpper:'',\r\n        // SOELower:'',\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n\r\n  //画table\r\n  const columns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex:'index',\r\n      width: '10%',\r\n      editable: false,\r\n    },\r\n    {\r\n        title: '通道类型',\r\n        dataIndex:'type',\r\n        width: '20%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '滤波时间',\r\n        dataIndex:'time',\r\n        width: '20%',\r\n        editable: true,\r\n      },\r\n    {\r\n      title: 'SOE事件',\r\n      dataIndex:'SOE',\r\n      width: '20%',\r\n      editable: true,\r\n    },\r\n    \r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <Button\r\n              type='link'\r\n              onClick={() => save(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              保存\r\n            </Button>\r\n            <Popconfirm title=\"取消编辑？\" onConfirm={cancel}>\r\n              <Button type='text'>取消</Button>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n            <Button  type='link' disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n              编辑\r\n            </Button>\r\n            <Button type='link' disabled={editingKey !== ''}  >\r\n              添加\r\n            </Button>\r\n            <Button type='text' disabled={editingKey !== ''}   danger>\r\n              删除\r\n            </Button>\r\n        </div>\r\n      \r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  //循环遍历colums\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n  console.log('inputType: col.dataIndex,',col.dataIndex)\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        // inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n        inputType: col.dataIndex,\r\n\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={false}\r\n        croll={{y:'true'}}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default DoTable;\r\n\r\n\r\n\r\n","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\draft\\ai.jsx",["265"],"import React,{ Component }  from 'react';\r\nimport aiURL from '../../../../../assets/img/AI.png'\r\n\r\n\r\nexport default class Cpu extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        console.log('CPU现在收到的props是多少呢？？',props)\r\n    }\r\n\r\n    render(){\r\n        const index = this.props.index;\r\n        const type = this.props.type;\r\n\r\n        return(\r\n            <span  onClick={this.props.selectImg.bind(this,{index},{type})}>\r\n               <img style={{width:'200px',height:'200px',marginTop:'63px'}} src={ aiURL }  />\r\n            </span>\r\n        )\r\n    }\r\n\r\n    \r\n}","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\draft\\ao.jsx",["266"],"import React,{ Component }  from 'react';\r\nimport aoURL from '../../../../../assets/img/AO.png'\r\n\r\n\r\nexport default class Cpu extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        console.log('CPU现在收到的props是多少呢？？',props)\r\n    }\r\n\r\n    render(){\r\n        const index = this.props.index;\r\n        const type = this.props.type;\r\n\r\n        return(\r\n            <span  onClick={this.props.selectImg.bind(this,{index},{type})}>\r\n               <img src={ aoURL } style={{width:'200px',height:'200px',marginTop:'63px'}}/>\r\n            </span>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\draft\\cpu.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\ai\\aiTab.jsx",["267"],"import React,{ useState,useEffect}  from 'react';\r\nimport { Table,InputNumber, Popconfirm, Form, Button } from 'antd';\r\nimport { Select } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n//单元格的格式以及规则的限定\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n \r\n  const inputNode =inputType === 'funcCode' ? <Select style={{ width: 180 }}>\r\n                                                  <Option value=\"Read Coils\"> Read Coils</Option>\r\n                                                  <Option value=\"Read Discreate Inputs\"> Read Discreate Inputs</Option>\r\n                                                  <Option value=\"Read Holding Registers\"> Read Holding Registers</Option>\r\n                                                  <Option value=\"Read Input Registers\"> Read Input Registers</Option>\r\n                                                  <Option value=\"Write Coil\"> Write Coil</Option>\r\n                                                  <Option value=\"Write Register\"> Write Register</Option>\r\n                                                  <Option value=\"Write Coils\"> Write Coils</Option>\r\n                                                  <Option value=\"Write Registers\"> Write Registers</Option>\r\n                                              </Select> \r\n                                              :<InputNumber />;\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\n\r\n//\r\nconst AiTable = (props) => {\r\n  const [form] = Form.useForm();\r\n  const info = props.info\r\n  const [data, setData] = useState(props.info);\r\n  const [editingKey, setEditingKey] = useState('');\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  useEffect(() =>{\r\n    setData(info)\r\n})\r\n\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n        index:'',\r\n        time:'',\r\n        SOE:'',\r\n        SOERange:'',\r\n        SOEUpper:'',\r\n        SOELower:'',\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n\r\n  //画table\r\n  const columns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex: 'index',\r\n      width: '10%',\r\n      editable: false,\r\n    },\r\n    {\r\n      title: '滤波时间',\r\n      dataIndex:'time',\r\n      width: '10%',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'SOE事件',\r\n      dataIndex: 'SOE',\r\n      width: '15%',\r\n      editable: true,\r\n    },\r\n    \r\n      {\r\n        title: 'SOE滞回区间',\r\n        dataIndex: 'SOERange',\r\n        width: '15%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: 'SOE上限',\r\n        dataIndex: 'SOEUpper',\r\n        width: '10%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: 'SOE下限',\r\n        dataIndex: 'SOELower',\r\n        width: '10%',\r\n        editable: true,\r\n      },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <Button\r\n              type='link'\r\n              onClick={() => save(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              保存\r\n            </Button>\r\n            <Popconfirm title=\"取消编辑？\" onConfirm={cancel}>\r\n              <Button type='text'>取消</Button>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n             <Button  type='link' disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n              编辑\r\n            </Button>\r\n            <Button type='link' disabled={editingKey !== ''}  >\r\n              添加\r\n            </Button>\r\n            <Button type='text' disabled={editingKey !== ''}   danger>\r\n              删除\r\n            </Button>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  //循环遍历colums\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n  console.log('inputType: col.dataIndex,',col.dataIndex)\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        // inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n        inputType: col.dataIndex,\r\n\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={false}\r\n        scroll={{x:'true'}}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default AiTable;\r\n\r\n\r\n\r\n","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\cpu\\aiTab.jsx",["268"],"import React,{ useState ,useEffect }  from 'react';\r\nimport { Table,InputNumber, Popconfirm, Form,Button } from 'antd';\r\nimport { Select } from 'antd';\r\n// import Info from '../info';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n//单元格的格式以及规则的限定\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n \r\n  const inputNode =inputType === 'funcCode' ? <Select style={{ width: 180 }}>\r\n                                                  <Option value=\"Read Coils\"> Read Coils</Option>\r\n                                                  <Option value=\"Read Discreate Inputs\"> Read Discreate Inputs</Option>\r\n                                                  <Option value=\"Read Holding Registers\"> Read Holding Registers</Option>\r\n                                                  <Option value=\"Read Input Registers\"> Read Input Registers</Option>\r\n                                                  <Option value=\"Write Coil\"> Write Coil</Option>\r\n                                                  <Option value=\"Write Register\"> Write Register</Option>\r\n                                                  <Option value=\"Write Coils\"> Write Coils</Option>\r\n                                                  <Option value=\"Write Registers\"> Write Registers</Option>\r\n                                              </Select> \r\n                                              :<InputNumber />;\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\n\r\n//\r\nconst AiTable = (props) => {\r\n  const [form] = Form.useForm();\r\n  const info = props.info;\r\n  const [data, setData] = useState(props.info);\r\n  const [editingKey, setEditingKey] = useState('');\r\n\r\n  useEffect(() =>{\r\n      setData(info)\r\n  })\r\n  \r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n        index:'',\r\n        type:'',\r\n        time:'',\r\n        SOE:'',\r\n        SOERange:'',\r\n        SOEUpper:'',\r\n        SOELower:'',\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n\r\n  //画table\r\n  const columns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex:'index',\r\n      width: '10%',\r\n      editable: false,\r\n    },\r\n    {\r\n        title: '通道类型',\r\n        dataIndex:'type',\r\n        width: '10%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '滤波时间',\r\n        dataIndex:'time',\r\n        width: '10%',\r\n        editable: true,\r\n      },\r\n    {\r\n      title: 'SOE事件',\r\n      dataIndex:'SOE',\r\n      width: '10%',\r\n      editable: true,\r\n    },\r\n    \r\n      {\r\n        title: 'SOE滞回区间',\r\n        dataIndex:'SOERange',\r\n        width: '10%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: 'SOE上限',\r\n        dataIndex:'SOEUpper',\r\n        width: '10%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: 'SOE下限',\r\n        dataIndex:'SOELower',\r\n        width: '10%',\r\n        editable: true,\r\n      },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n          <Button\r\n              type='link'\r\n              onClick={() => save(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              保存\r\n            </Button>\r\n            <Popconfirm title=\"取消编辑？\" onConfirm={cancel}>\r\n              <Button type='text'>取消</Button>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n            <Button  type='link' disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n              编辑\r\n            </Button>\r\n            <Button type='link' disabled={editingKey !== ''}  >\r\n              添加\r\n            </Button>\r\n            <Button type='text' disabled={editingKey !== ''}   danger>\r\n              删除\r\n            </Button>\r\n        </div>\r\n      \r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  //循环遍历colums\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n  console.log('inputType: col.dataIndex,',col.dataIndex)\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        // inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n        inputType: col.dataIndex,\r\n\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={false}\r\n        croll={{y:'true'}}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default AiTable\r\n\r\n\r\n\r\n","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\cpu\\cpuTab.jsx",["269"],"import React,{ useState ,useEffect }  from 'react';\r\nimport { Table,InputNumber, Popconfirm, Form ,Button} from 'antd';\r\nimport { Select } from 'antd';\r\n// import Info from '../info';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n//单元格的格式以及规则的限定\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n \r\n  const inputNode =inputType === 'funcCode' ? <Select style={{ width: 180 }}>\r\n                                                  <Option value=\"Read Coils\"> Read Coils</Option>\r\n                                                  <Option value=\"Read Discreate Inputs\"> Read Discreate Inputs</Option>\r\n                                                  <Option value=\"Read Holding Registers\"> Read Holding Registers</Option>\r\n                                                  <Option value=\"Read Input Registers\"> Read Input Registers</Option>\r\n                                                  <Option value=\"Write Coil\"> Write Coil</Option>\r\n                                                  <Option value=\"Write Register\"> Write Register</Option>\r\n                                                  <Option value=\"Write Coils\"> Write Coils</Option>\r\n                                                  <Option value=\"Write Registers\"> Write Registers</Option>\r\n                                              </Select> \r\n                                              :<InputNumber />;\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\n\r\n//\r\nconst CpuTable = (props) => {\r\n  const [form] = Form.useForm();\r\n  const info = props.info;\r\n  const [data, setData] = useState(props.info);\r\n  console.log('dataaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',info)\r\n  const [editingKey, setEditingKey] = useState('');\r\n\r\n  useEffect(() =>{\r\n\r\n      setData(info)\r\n  })\r\n  \r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  console.log('此时的editingKey是多少呢？',editingKey)\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n        index:'',\r\n        num:'',\r\n        // time:'',\r\n        // type:'',\r\n        SOE:'',\r\n        // SOERange:'',\r\n        // SOEUpper:'',\r\n        // SOELower:'',\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n\r\n  //画table\r\n  const columns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex:'index',\r\n      width: '10%',\r\n      editable: false,\r\n    },\r\n    {\r\n        title: '通道类型',\r\n        dataIndex:'type',\r\n        width: '15%',\r\n        editable: true,\r\n      },\r\n      // {\r\n      //   title: '滤波次数',\r\n      //   dataIndex:'num',\r\n      //   width: '10%',\r\n      //   editable: true,\r\n      // },\r\n      {\r\n        title: '滤波时间',\r\n        dataIndex:'time',\r\n        width: '15%',\r\n        editable: true,\r\n      },\r\n    {\r\n      title: 'SOE事件',\r\n      dataIndex:'SOE',\r\n      width: '25%',\r\n      editable: true,\r\n    },\r\n    \r\n    //   {\r\n    //     title: 'SOE滞回区间',\r\n    //     dataIndex:'SOERange',\r\n    //     width: '15%',\r\n    //     editable: true,\r\n    //   },\r\n    //   {\r\n    //     title: 'SOE上限',\r\n    //     dataIndex:'SOEUpper',\r\n    //     width: '15%',\r\n    //     editable: true,\r\n    //   },\r\n    //   {\r\n    //     title: 'SOE下限',\r\n    //     dataIndex:'SOELower',\r\n    //     width: '15%',\r\n    //     editable: true,\r\n    //   },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <Button\r\n              type='link'\r\n              onClick={() => save(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              保存\r\n            </Button>\r\n            <Popconfirm title=\"取消编辑？\" onConfirm={cancel}>\r\n              <Button type='text'>取消</Button>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n             <Button  type='link' disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n              编辑\r\n            </Button>\r\n            <Button type='link' disabled={editingKey !== ''}  >\r\n              添加\r\n            </Button>\r\n            <Button type='text' disabled={editingKey !== ''}   danger>\r\n              删除\r\n            </Button>\r\n          </div>\r\n         \r\n          \r\n          \r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  //循环遍历colums\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n  console.log('inputType: col.dataIndex,',col.dataIndex)\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        // inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n        inputType: col.dataIndex,\r\n\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={false}\r\n        croll={{y:'true'}}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default CpuTable;\r\n\r\n\r\n\r\n","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\hardwareCon.jsx",["270"],"import { List } from 'antd/lib/form/Form';\r\nimport React,{ Component }  from 'react';\r\nimport Draft from './draft/draft'\r\nimport Info from './info/info'\r\n\r\n\r\n\r\nexport default class TermSer extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            show:[\r\n                {\r\n                    CpuShow:'none',\r\n                    AiShow:'none',\r\n                    AoShow:'none',\r\n                }\r\n\r\n            ],\r\n           \r\n            currentInfo:[],\r\n            list:[],\r\n            infoData:[],\r\n                \r\n            \r\n        }\r\n\r\n    }\r\n   \r\n    uploadList =() =>{\r\n        let list = ['CPU','AO','AI']\r\n        let info = this.state.infoData\r\n        let currentD =[]\r\n        \r\n        list.map((item ) => {\r\n            if(item === 'CPU'){\r\n                let cpuInfo =[{\r\n                    key:'1',\r\n                    index:1,\r\n                    type:'DI',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'2',\r\n                    index:2,\r\n                    type:'DI',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'3',\r\n                    index:3,\r\n                    type:'DI',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'4',\r\n                    index:4,\r\n                    type:'DI',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'5',\r\n                    index:5,\r\n                    type:'DI',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'6',\r\n                    index:6,\r\n                    type:'DI',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'7',\r\n                    index:7,\r\n                    type:'DI',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'8',\r\n                    index:8,\r\n                    type:'DI',\r\n                    SOE:'超上限',\r\n                    time:'33 ms',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'9',\r\n                    index:9,\r\n                    type:'DI',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'10',\r\n                    index:10,\r\n                    type:'DI',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'11',\r\n                    index:11,\r\n                    type:'DI',\r\n                    SOE:'超上限',\r\n                    time:'33 ms',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'12',\r\n                    index:12,\r\n                    type:'DI',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'13',\r\n                    index:1,\r\n                    type:'DO',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'14',\r\n                    index:2,\r\n                    type:'DO',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'15',\r\n                    index:3,\r\n                    type:'DO',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'16',\r\n                    index:4,\r\n                    type:'DO',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'17',\r\n                    index:1,\r\n                    type:'AI',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'18',\r\n                    index:2,\r\n                    type:'AI',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'19',\r\n                    index:3,\r\n                    type:'AI',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'20',\r\n                    index:4,\r\n                    type:'AI',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'21',\r\n                    index:5,\r\n                    type:'AI',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'22',\r\n                    index:6,\r\n                    type:'AI',\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                }\r\n            ]\r\n\r\n           \r\n                \r\n            currentD.push(cpuInfo)\r\n           \r\n            }\r\n            if(item === 'AO'){\r\n                let aoInfo = [{\r\n                    key:'23',\r\n                    index:1,\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'12',\r\n                    SOEUpper:'24',\r\n                    SOELower:'12',\r\n                    fault:'23'\r\n                }]\r\n                currentD.push(aoInfo)\r\n            }\r\n            if(item === 'AI'){\r\n                let aiInfo = [{\r\n                    key:'24',\r\n                    index:1,\r\n                    time:'33 ms',\r\n                    SOE:'超上限',\r\n                    SOERange:'7',\r\n                    SOEUpper:'28',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'25',\r\n                    index:2,\r\n                    time:'33 ms',\r\n                    SOE:'超下限',\r\n                    SOERange:'12',\r\n                    SOEUpper:'232',\r\n                    SOELower:'21'\r\n                },{\r\n                    key:'26',\r\n                    index:3,\r\n                    time:'33 ms',\r\n                    SOE:' 恢复',\r\n                    SOERange:'87',\r\n                    SOEUpper:'65',\r\n                    SOELower:'21'\r\n                },]\r\n\r\n                currentD.push(aiInfo)\r\n            }\r\n            \r\n        })\r\n\r\n        if(list[0] ==='CPU'){\r\n            let show={\r\n                CpuShow:'inline',\r\n                AiShow:'none',\r\n                AoShow:'none'\r\n            }\r\n            this.setState({show:[show]})\r\n\r\n        }\r\n        if(list[0] === 'AO'){\r\n            let show={\r\n                CpuShow:'none',\r\n                AiShow:'none',\r\n                AoShow:'inline'\r\n            }\r\n            this.setState({show:[show]})\r\n\r\n        }\r\n        if(List[0] === 'AI'){\r\n            let show={\r\n                CpuShow:'none',\r\n                AiShow:'inline',\r\n                AoShow:'none'\r\n            }\r\n            this.setState({show:[show]})   \r\n        }\r\n        let currentInfo =currentD[0]\r\n        this.setState({currentInfo:[...currentInfo],list:[...list],infoData:[...info,...currentD]})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    changeInfo = () => {\r\n        console.log('在这里change info的值哦')\r\n    }\r\n\r\n    selectImg = (index,type) =>{\r\n        \r\n        let num = index.index\r\n\r\n        if(type.type === 'CPU'){\r\n            let selectInfo = this.state.infoData[num]\r\n            let show={\r\n                CpuShow:'inline',\r\n                AiShow:'none',\r\n                AoShow:'none'\r\n            }\r\n\r\n            this.setState({show:[show]})\r\n            this.setState({currentInfo:[...selectInfo]})\r\n        }\r\n        if(type.type === 'AO'){\r\n            let selectInfo = this.state.infoData[num]\r\n            let show={\r\n                CpuShow:'none',\r\n                AiShow:'none',\r\n                AoShow:'inline'\r\n            }\r\n\r\n            this.setState({show:[show]})\r\n            this.setState({currentInfo:[...selectInfo]})\r\n\r\n        }\r\n        if(type.type === 'AI'){\r\n            let selectInfo = this.state.infoData[num]\r\n            let show={\r\n                CpuShow:'none',\r\n                AiShow:'inline',\r\n                AoShow:'none'\r\n            }\r\n\r\n            this.setState({show:[show]})\r\n            this.setState({currentInfo:[...selectInfo]})\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div style={{height:'83vh' ,marginTop:'20px'}}>\r\n               <div style={{height:'40%' ,backgroundColor:'white'}}>\r\n                   <Draft list={this.state.list} \r\n                          uploadList={this.uploadList} \r\n                          info={this.state.infoData} \r\n                          selectImg={this.selectImg}/>\r\n\r\n               </div>\r\n               <div style={{minHeight:'60%',backgroundColor:'white',marginTop:'10px'}}>\r\n                   <Info info={this.state.currentInfo} show={this.state.show} />\r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\Fireware\\rts\\rts.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\Fireware\\ios\\ios3.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\Fireware\\ios\\ios5.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\Fireware\\upgrade.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\device-real.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modtcp\\table.jsx",["271","272","273","274"],"import React,{ Component ,useState}  from 'react';\r\nimport { Table,InputNumber, Popconfirm, Form } from 'antd';\r\nimport { Select } from 'antd';\r\n\r\n// const originData = [];\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n//单元格的格式以及规则的限定\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n \r\n  const inputNode =inputType === 'funcCode' ? <Select style={{ width: 100 }}>\r\n                                                  <Option value=\"Read Coils\"> Read Coils</Option>\r\n                                                  <Option value=\"Read Discreate Inputs\"> Read Discreate Inputs</Option>\r\n                                                  <Option value=\"Read Holding Registers\"> Read Holding Registers</Option>\r\n                                                  <Option value=\"Read Input Registers\"> Read Input Registers</Option>\r\n                                                  <Option value=\"Write Coil\"> Write Coil</Option>\r\n                                                  <Option value=\"Write Register\"> Write Register</Option>\r\n                                                  <Option value=\"Write Coils\"> Write Coils</Option>\r\n                                                  <Option value=\"Write Registers\"> Write Registers</Option>\r\n                                              </Select> \r\n                                              :<InputNumber />;\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\n\r\n//\r\nconst EditableTable = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(props.originData);\r\n  const [editingKey, setEditingKey] = useState('');\r\n  console.log('此时的data是多少呢？',data)\r\n  \r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  console.log('此时的editingKey是多少呢？',editingKey)\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n        IP:'',\r\n        port:'',\r\n        slaveId:'',\r\n        funcCode:'',\r\n        Addre:'',\r\n        mappinAddre:'',\r\n        number:'',\r\n        timeout:'',\r\n        netport:'',\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n\r\n  //画table\r\n  const columns = [\r\n    {\r\n        title: '序号',\r\n        dataIndex: 'index',\r\n        width: '5%',\r\n        editable: false,\r\n      },\r\n      {\r\n        title: 'IP',\r\n        dataIndex: 'IP',\r\n        width: '10%',\r\n        editable: false,\r\n      },\r\n    {\r\n      title: 'Port',\r\n      dataIndex: 'port',\r\n      width: '3%',\r\n      editable: false,\r\n    },\r\n    {\r\n        title: 'Slave ID',\r\n        dataIndex: 'slaveId',\r\n        width: '10%',\r\n        editable: false,\r\n      },\r\n    {\r\n      title: '功能码',\r\n      dataIndex: 'funcCode',\r\n      width: '18%',\r\n      editable: true,\r\n    },\r\n    \r\n      {\r\n        title: '地址',\r\n        dataIndex: 'Addre',\r\n        width: '10%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '映射地址',\r\n        dataIndex: 'mappinAddre',\r\n        width: '10%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '数量',\r\n        dataIndex: 'number',\r\n        width: '10%',\r\n        editable: true,\r\n      }, \r\n       {\r\n        title: 'Netport',\r\n        dataIndex: 'netport',\r\n        width: '10%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '响应时间',\r\n        dataIndex: 'timeout',\r\n        width: '10%',\r\n        editable: true,\r\n      },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <a\r\n            //   href=\"javascript:;\"\r\n              onClick={() => save(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              保存\r\n            </a>\r\n            <Popconfirm title=\"取消编辑？\" onConfirm={cancel}>\r\n              <a>取消</a>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <a disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n            编辑\r\n          </a>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  //循环遍历colums\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n  console.log('inputType: col.dataIndex,',col.dataIndex)\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        // inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n        inputType: col.dataIndex,\r\n\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={false}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n  \r\n\r\n\r\n\r\n\r\n\r\nexport default EditableTable;","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modtcp\\modtcp.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\login.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\Fireware\\ios\\ios.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\Fireware\\ios\\ios4.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\draft\\display.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\hardware\\info\\ai\\ai.jsx",["275","276"],"import React,{ Component }  from 'react';\r\nimport { Select,Button  } from 'antd';\r\nimport AiTab from './aiTab'\r\n\r\nconst { Option } = Select;\r\nexport default class Ai extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        console.log('现在的ai里面是什么呢？',props.info)\r\n    }\r\n    render(){\r\n        const info = this.props.info\r\n        console.log('我是aiaiaiaiaiaiaiaiai',info)\r\n\r\n        return(\r\n            <div style={{margin:'10px'}}>\r\n                <div style={{fontSize:'22px',marginBottom:'20px'}}>\r\n                    AI配置信息\r\n                </div>\r\n                {/* <div style={{fontSize:'16px',margin:'10px',float:'right'}}>\r\n                滤波时间:\r\n                    <Select defaultValue=\"33\" style={{ width: 100,marginLeft:'10px' }} >\r\n                        <Option value=\"33\">33ms</Option>\r\n                        <Option value=\"23\">23ms</Option>\r\n                        <Option value=\"13\">13ms</Option>\r\n                        <Option value=\"43\">43ms</Option>\r\n                    </Select>\r\n                    <Button style={{ marginLeft:'10px' }}>保存</Button>\r\n\r\n                </div> */}\r\n\r\n               <AiTab info={info} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\Fireware\\rts\\rtsInfo.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\publish\\publish.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modrtu\\port01.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modrtu\\port03.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modrtu\\port05.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modrtu\\tables.jsx",["277","278","279","280","281"],"import React,{ useState}  from 'react';\r\nimport { Table,InputNumber, Popconfirm, Form } from 'antd';\r\nimport { Select } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n//单元格的格式以及规则的限定\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n \r\n  const inputNode =inputType === 'funcCode' ? <Select style={{ width: 180 }}>\r\n                                                  <Option value=\"Read Coils\"> Read Coils</Option>\r\n                                                  <Option value=\"Read Discreate Inputs\"> Read Discreate Inputs</Option>\r\n                                                  <Option value=\"Read Holding Registers\"> Read Holding Registers</Option>\r\n                                                  <Option value=\"Read Input Registers\"> Read Input Registers</Option>\r\n                                                  <Option value=\"Write Coil\"> Write Coil</Option>\r\n                                                  <Option value=\"Write Register\"> Write Register</Option>\r\n                                                  <Option value=\"Write Coils\"> Write Coils</Option>\r\n                                                  <Option value=\"Write Registers\"> Write Registers</Option>\r\n                                              </Select> \r\n                                              :<InputNumber />;\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\n\r\n//\r\nconst EditableTable = (props) => {\r\n  const [form] = Form.useForm();\r\n\r\n\r\n  const [data, setData] = useState(props.originData);\r\n  const [editingKey, setEditingKey] = useState('');\r\n\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      index:'',\r\n      funcCode:'',\r\n      Addre:'',\r\n      mappinAddre:'',\r\n      number:'',\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n\r\n  //画table\r\n  const columns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex: 'index',\r\n      width: '10%',\r\n      editable: false,\r\n    },\r\n    {\r\n      title: '功能码',\r\n      dataIndex: 'funcCode',\r\n      width: '25%',\r\n      editable: true,\r\n    },\r\n    \r\n      {\r\n        title: '地址',\r\n        dataIndex: 'Addre',\r\n        width: '15%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '映射地址',\r\n        dataIndex: 'mappinAddre',\r\n        width: '15%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: '数量',\r\n        dataIndex: 'number',\r\n        width: '15%',\r\n        editable: true,\r\n      },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <a\r\n            //   href=\"javascript:;\"\r\n              onClick={() => save(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              保存\r\n            </a>\r\n            <Popconfirm title=\"取消编辑？\" onConfirm={cancel}>\r\n              <a>取消</a>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <div>\r\n              <a disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n              编辑\r\n            </a>\r\n            <a disabled={editingKey !== ''} style={{marginLeft:'15px',marginRight:'15px'}} >\r\n              添加\r\n            </a>\r\n            <a disabled={editingKey !== ''} style={{color:'red'}} >\r\n              删除\r\n            </a>\r\n        </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n  //循环遍历colums\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n  console.log('inputType: col.dataIndex,',col.dataIndex)\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        // inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n        inputType: col.dataIndex,\r\n\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={false}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\n\r\nexport default EditableTable;","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modrtu\\modrtu.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\mqtt\\broker\\broker.jsx",["282"],"import React,{ Component }  from 'react';\r\nimport { Tabs } from 'antd';\r\n\r\nimport Publish from '../publish/publish'\r\nimport Subscript from '../subscript/subscript'\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction callback(key) {\r\n  console.log(key);\r\n}\r\n\r\nconst Broker = () => (\r\n  <Tabs defaultActiveKey=\"1\" onChange={callback}   style={{marginTop:'20px'}}>\r\n    <TabPane tab=\"发布参数\" key=\"1\">\r\n      <Publish />\r\n    </TabPane>\r\n    <TabPane tab=\"订阅参数\" key=\"2\">\r\n      <Subscript />\r\n    </TabPane>\r\n  </Tabs>\r\n);\r\n\r\nexport default Broker;","C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\index.js",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modAdress\\modbusAdre.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\communication\\comm.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\ProjectVari\\project.jsx",[],"C:\\Users\\wang\\Desktop\\version 2.0\\demo2.0\\src\\pages\\view\\menu\\modrtu\\tabs.jsx",[],{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","severity":1,"message":"288","line":212,"column":5,"nodeType":"289","messageId":"290","endLine":215,"endColumn":6},{"ruleId":"283","replacedBy":"291"},{"ruleId":"285","replacedBy":"292"},{"ruleId":"283","replacedBy":"293"},{"ruleId":"285","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":6,"column":9,"nodeType":"297","messageId":"298","endLine":6,"endColumn":15},{"ruleId":"287","severity":1,"message":"288","line":12,"column":5,"nodeType":"289","messageId":"290","endLine":15,"endColumn":6},{"ruleId":"295","severity":1,"message":"299","line":2,"column":17,"nodeType":"297","messageId":"298","endLine":2,"endColumn":23},{"ruleId":"295","severity":1,"message":"296","line":5,"column":9,"nodeType":"297","messageId":"298","endLine":5,"endColumn":15},{"ruleId":"295","severity":1,"message":"299","line":3,"column":17,"nodeType":"297","messageId":"298","endLine":3,"endColumn":23},{"ruleId":"287","severity":1,"message":"288","line":15,"column":5,"nodeType":"289","messageId":"290","endLine":17,"endColumn":6},{"ruleId":"300","severity":1,"message":"301","line":68,"column":3,"nodeType":"297","endLine":68,"endColumn":12,"suggestions":"302"},{"ruleId":"300","severity":1,"message":"301","line":66,"column":3,"nodeType":"297","endLine":66,"endColumn":12,"suggestions":"303"},{"ruleId":"304","severity":1,"message":"305","line":17,"column":16,"nodeType":"306","endLine":17,"endColumn":94},{"ruleId":"304","severity":1,"message":"305","line":17,"column":16,"nodeType":"306","endLine":17,"endColumn":92},{"ruleId":"300","severity":1,"message":"301","line":66,"column":3,"nodeType":"297","endLine":66,"endColumn":12,"suggestions":"307"},{"ruleId":"300","severity":1,"message":"301","line":66,"column":3,"nodeType":"297","endLine":66,"endColumn":12,"suggestions":"308"},{"ruleId":"300","severity":1,"message":"301","line":67,"column":3,"nodeType":"297","endLine":67,"endColumn":12,"suggestions":"309"},{"ruleId":"310","severity":1,"message":"311","line":35,"column":26,"nodeType":"312","messageId":"313","endLine":35,"endColumn":28},{"ruleId":"295","severity":1,"message":"314","line":1,"column":16,"nodeType":"297","messageId":"298","endLine":1,"endColumn":25},{"ruleId":"315","severity":1,"message":"316","line":183,"column":13,"nodeType":"306","endLine":189,"endColumn":14},{"ruleId":"315","severity":1,"message":"316","line":193,"column":15,"nodeType":"306","endLine":193,"endColumn":18},{"ruleId":"315","severity":1,"message":"316","line":197,"column":11,"nodeType":"306","endLine":197,"endColumn":72},{"ruleId":"295","severity":1,"message":"299","line":2,"column":17,"nodeType":"297","messageId":"298","endLine":2,"endColumn":23},{"ruleId":"295","severity":1,"message":"296","line":5,"column":9,"nodeType":"297","messageId":"298","endLine":5,"endColumn":15},{"ruleId":"315","severity":1,"message":"316","line":149,"column":13,"nodeType":"306","endLine":155,"endColumn":14},{"ruleId":"315","severity":1,"message":"316","line":159,"column":15,"nodeType":"306","endLine":159,"endColumn":18},{"ruleId":"315","severity":1,"message":"316","line":164,"column":15,"nodeType":"306","endLine":164,"endColumn":76},{"ruleId":"315","severity":1,"message":"316","line":167,"column":13,"nodeType":"306","endLine":167,"endColumn":93},{"ruleId":"315","severity":1,"message":"316","line":170,"column":13,"nodeType":"306","endLine":170,"endColumn":68},{"ruleId":"295","severity":1,"message":"314","line":1,"column":16,"nodeType":"297","messageId":"298","endLine":1,"endColumn":25},"no-native-reassign",["317"],"no-negated-in-lhs",["318"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["317"],["318"],["317"],["318"],"no-unused-vars","'Option' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setData'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [info] as a second argument to the useEffect Hook.",["319"],["320"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["321"],["322"],["323"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"324","fix":"325"},{"desc":"324","fix":"326"},{"desc":"324","fix":"327"},{"desc":"324","fix":"328"},{"desc":"324","fix":"329"},"Add dependencies array: [info]",{"range":"330","text":"331"},{"range":"332","text":"331"},{"range":"333","text":"331"},{"range":"334","text":"331"},{"range":"335","text":"331"},[2203,2203],", [info]",[2132,2132],[2154,2154],[2132,2132],[2193,2193]]